// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import { group } from "k6";
import encoding from 'k6/encoding';

export let options = {
  // NB: stages used for ramp-up load testing
  // stages: [
  //   { duration: '5m', target: 10 }, // simulate ramp-up of traffic from 1 to 10 users over 3 minutes.
  //   { duration: '5m', target: 10 }, // stay at 10 users for 5 minutes
  //   { duration: '3m', target: 30 }, // ramp-up to 30 users over 3 minutes
  //   { duration: '5m', target: 30 }, // stay at 30 users for 5 minutes
  //   { duration: '3m', target: 50 }, // ramp-up to 50 users over 3 minutes (peak hour starts)
  //   { duration: '10m', target: 50 }, // stay at 50 users for an amount of time (peak hour)
  //   { duration: '3m', target: 30 }, // ramp-down to 30 users over 3 minutes (peak hour ends)
  //   { duration: '5m', target: 30 }, // continue at 30 for additional 5 minutes
  //   { duration: '3m', target: 10 }, // ramp-down to 10 users over 3 minutes
  //   { duration: '3m', target: 10 }, // continue at 10 for additional 3 minutes
  //   { duration: '5m', target: 0 }, // ramp-down to 0 users
  // ],
  duration: '1m', // comment out when using stages
  vus: 2, // comment out when using stages
  thresholds: {
    http_req_failed: ['rate<0.01'],
    http_req_duration: ['p(95)<28000'], // 2/10 calls (pdfs) are very long
  },
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    identifier: "1"
  },
  environment: {
    base_url: "https://bcregistry-test.apigee.net/registry-search",
    version: "api/v1",
    kc_url: "https://test.oidc.gov.bc.ca",
    realm: `${__ENV.realm}`,
    lear_url: "https://legal-api-test.apps.silver.devops.gov.bc.ca",
    lear_version: "api/v2",
    client_id: `${__ENV.client_id}`,
    client_secret: `${__ENV.client_secret}`,
    account_id: `${__ENV.account_id}`,
    api_key: `${__ENV.api_key}`,
    default_identifier: "BC0890450",
    default_name: "SIENNA'S CONDITIONAL CONSULTING CORPORATION",
    excluded_identifiers: "BC0879188"
  }
});

export default function() {
  const vuIteration = __VU - 1 // starts at 1
  const excluded_identifiers = (pm.environment.get("excluded_identifiers")).split(',')
  let has_doc = false
  let hasFilings = false
  group("search", function() {
    postman[Request]({
      name: "facets",
      id: "39380db7-6cf2-466e-be32-13409ec608fe",
      method: "GET",
      address:
        "{{base_url}}/{{version}}/businesses/search/facets?query=value:t&start=0&rows=150&categories=status:ACTIVE::legalType:BEN,CP",
      headers: {
        Accept: "application/json",
        "Account-Id": "{{account_id}}",
        "x-apikey": "{{api_key}}"
      },
      post(response) {
        pm.test("Facets status code is 200", function() {
          pm.response.to.have.status(200);
          var jsonData = pm.response.json();
          // set filing id + name
          if (jsonData) {
            const results = jsonData.searchResults.results;
            if (!excluded_identifiers.includes(results[vuIteration].identifier)) {
              pm.environment.set(`identifier_${vuIteration}`, results[vuIteration].identifier);
              pm.environment.set(`business_name_${vuIteration}`, results[vuIteration].name);
            } else {
              pm.environment.set(`identifier_${vuIteration}`, pm.environment.get("default_identifier"));
              pm.environment.set(`business_name_${vuIteration}`, pm.environment.get("default_name"));
            }
          } else console.log("facets", pm.response.code)
        });
      }
    });

    postman[Request]({
      name: "parties",
      id: "9bb907c6-30f1-4854-a6f8-fcb9181258c7",
      method: "GET",
      address:
        "{{base_url}}/{{version}}/businesses/search/parties?query=value:test&categories=partyRoles:partner,proprietor&rows=100",
      headers: {
        Accept: "application/json",
        "Account-Id": "{{account_id}}",
        "x-apikey": "{{api_key}}"
      },
      post(response) {

        pm.test("Parties status code is 200", function() {
          pm.response.to.have.status(200);
        });
      }
    });
  });
  group("business auth", function() {
    postman[Request]({
      name: "authenticate",
      id: "e876fc12-42f1-4605-b770-c410a284410c",
      method: "POST",
      address: "{{kc_url}}/auth/realms/{{realm}}/protocol/openid-connect/token",
      data: "grant_type=client_credentials",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/x-www-form-urlencoded"
      },
      post(response) {
        pm.test("Auth status code is 200", function() {
          pm.response.to.have.status(200);
          var jsonData = pm.response.json();
          pm.environment.set("token", jsonData.access_token);
        });
      },
      auth(config, Var) {
        const encodedAuth = encoding.b64encode(`${pm[Var]("client_id")}:${pm[Var]("client_secret")}`)
        config.headers.Authorization = `Basic ${encodedAuth}`
      }
    });
  });

  group("business info", function() {
    postman[Request]({
      name: "Get Business",
      id: "ce9bcb71-fc02-4211-8ee7-615792c74933",
      method: "GET",
      address: `{{lear_url}}/{{lear_version}}/businesses/{{identifier_${vuIteration}}}`,
      post(response) {
        pm.test("Business status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("token")}`;
      }
    });

    postman[Request]({
      name: "Get Filings LEAR",
      id: "1f2286a5-7b36-4fca-a1e7-8134c0dcc5f8",
      method: "GET",
      address:
        `{{lear_url}}/{{lear_version}}/businesses/{{identifier_${vuIteration}}}/filings`,
      headers: {
        Accept: "application/json"
      },
      post(response) {
        pm.test("Filings status code is 200", function() {
          pm.response.to.have.status(200);
          var jsonData = pm.response.json();
          // set filing id + name
          const filings = jsonData.filings;
          if (
            filings.length > 0 &&
            !filings[0].availableOnPaperOnly &&
            filings[0].status == "COMPLETED"
          ) {
            pm.environment.set(`filing_id_${vuIteration}`, filings[0].filingId);
            pm.environment.set(`filing_name_${vuIteration}`, filings[0].name);
            hasFilings = true
          }
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("token")}`;
      }
    });
    if (hasFilings) {
      postman[Request]({
        id: "1",
        name: "Get Filing documents info",
        method: "GET",
        address:
          `{{base_url}}/{{version}}/businesses/{{identifier_${vuIteration}}}/documents/filings/{{filing_id_${vuIteration}}}`,
        headers: {
          Accept: "application/json",
          "Account-Id": "{{account_id}}",
          "x-apikey": "{{api_key}}"
        },
        post(response) {
          pm.test("Filing documents status code is 200", function() {
            pm.response.to.have.status(200);
          });
        }
      });
    }
  });

  group("document-requests", function() {
    const data = JSON.stringify({
      business: {
        businessName: `{{business_name_${vuIteration}}}`
      },
      documentAccessRequest: {
        documents: [
          {type: "BUSINESS_SUMMARY_FILING_HISTORY"},
          {type: "LETTER_UNDER_SEAL"}
        ]
      }
    });
    postman[Request]({
      name: "Create Document Access Request",
      id: "23628756-dee9-4e7d-90bf-387d64387cb8",
      method: "POST",
      address:
        `{{base_url}}/{{version}}/businesses/{{identifier_${vuIteration}}}/documents/requests`,
      data: data,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
        "Account-Id": "{{account_id}}",
        "x-apikey": "{{api_key}}"
      },
      post(response) {
        pm.test("Document access request status code is 201/Created", function() {
          pm.response.to.have.status(201);
          var jsonData = pm.response.json();

          // success, so set keys
          pm.environment.set(`access_request_id_${vuIteration}`, jsonData.id);
          if (!jsonData.documents) console.log(jsonData)
          else {
            pm.environment.set(`document_key_${vuIteration}`, jsonData.documents[0].documentKey);
            has_doc = true
          }
        });
      }
    });

    postman[Request]({
      name: "Get Purchases",
      id: "f2bf48ab-c226-464c-9ccd-6dc91d63418f",
      method: "GET",
      address: "{{base_url}}/{{version}}/purchases",
      headers: {
        Accept: "application/json",
        "Account-Id": "{{account_id}}",
        "x-apikey": "{{api_key}}"
      },
      post(response) {
        pm.test("Purchases status code is 200", function() {
          pm.response.to.have.status(200);
        });
      }
    });
  });

  group("documents", function() {
    if (has_doc) {
      // postman[Request]({
      //   name: "Get document pdf",
      //   id: "f9613a03-c995-4b19-a4dd-864d3a92060f",
      //   method: "GET",
      //   address:
      //     `{{base_url}}/{{version}}/businesses/{{identifier_${vuIteration}}}/documents/{{document_key_${vuIteration}}}`,
      //   headers: {
      //     Accept: "application/pdf",
      //     "Account-Id": "{{account_id}}",
      //     "x-apikey": "{{api_key}}"
      //   },
      //   post(response) {
      //     const identifier = pm.environment.get(`identifier_${vuIteration}`)
      //     const document = pm.environment.get(`document_key_${vuIteration}`)
      //     pm.test("Business document pdf status code is 200", function() {
      //       console.log(`document: ${identifier} ${document}`, pm.response.code)
      //       pm.response.to.have.status(200);
      //     });
      //   }
      // });

      postman[Request]({
        name: "Get document json",
        id: "db48a91b-013e-4c6b-8551-fe18ac08af59",
        method: "GET",
        address:
          `{{base_url}}/{{version}}/businesses/{{identifier_${vuIteration}}}/documents/{{document_key_${vuIteration}}}`,
        headers: {
          Accept: "application/json",
          "Account-Id": "{{account_id}}",
          "x-apikey": "{{api_key}}"
        },
        post(response) {
          pm.test("Business document json status code is 200", function() {
            pm.response.to.have.status(200);
          });
        }
      });
      if (hasFilings) {
        postman[Request]({
          name: "Get filing pdf",
          id: "04bd80b4-0473-40fd-bb11-e878e7e52f4f",
          method: "GET",
          address:
            `{{base_url}}/{{version}}/businesses/{{identifier_${vuIteration}}}/documents/filings/{{filing_id_${vuIteration}}}/{{filing_name_${vuIteration}}}`,
          headers: {
            Accept: "application/pdf",
            "Account-Id": "{{account_id}}",
            "x-apikey": "{{api_key}}"
          },
          post(response) {
            const filingName = pm.environment.get(`filing_name_${vuIteration}`)
            const filingId = pm.environment.get(`filing_id_${vuIteration}`)
            pm.test("Filing document pdf status code is 200", function() {
              console.log(`filing: ${filingId} ${filingName}`, pm.response.code)
              pm.response.to.have.status(200);
            });
          }
        });
      }
    }
  });
}